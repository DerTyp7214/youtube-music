name: CI Build YouTube Music

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    name: Build YouTube Music
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Setup NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: "14.x"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Build on Windows
        if: startsWith(matrix.os, 'windows')
        continue-on-error: true
        run: |
          yarn run build:win

      - name: Build on Linux
        if: startsWith(matrix.os, 'ubuntu')
        continue-on-error: true
        run: |
          yarn run build:linux

      - name: Build on Mac
        if: startsWith(matrix.os, 'macOS')
        continue-on-error: true
        run: |
          yarn run build:mac

      - run: ls dist

      - name: Create new Windows Release
        if: startsWith(matrix.os, 'windows')
        id: create_latest_windows_release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GH_TOKEN }}
          automatic_release_tag: latest-windows
          prerelease: false
          title: YouTube Music Desktop for Windows
          files: |
            dist/YouTube*.exe

      - name: Create new Mac Release
        if: startsWith(matrix.os, 'macOS')
        id: create_latest_mac_release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GH_TOKEN }}
          automatic_release_tag: latest-mac
          prerelease: false
          title: YouTube Music Desktop for Mac
          files: |
            dist/YouTube*.dmg

      - name: Create new Linux Release
        if: startsWith(matrix.os, 'ubuntu')
        id: create_latest_linux_release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GH_TOKEN }}
          automatic_release_tag: latest-linux
          prerelease: false
          title: YouTube Music Desktop for Linux
          files: |
            dist/YouTube*.AppImage
            dist/youtube*.snap
            dist/youtube*.freebsd
            dist/youtube*.deb
            dist/youtube*.rpm
